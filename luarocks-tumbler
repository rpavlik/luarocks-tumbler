#!/bin/bash

# Original Author:
# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>
# http://academic.cleardefinition.com
# Iowa State University HCI Graduate Program/VRAC
#
# Copyright Iowa State University 2012.
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt)

luarocks_ver="2.0.7.1"
luarocks_url="http://luarocks.org/releases/luarocks-${luarocks_ver}.tar.gz"

rundir=$(pwd)

###
# Prepare specified or computed TREEDIR
: ${TREEDIR:="${rundir}/tree"}
mkdir -p "${TREEDIR}"

###
# Start log file
logfile="${TREEDIR}/tumbler.log"

cat >> "${logfile}" <<EOF

***
* Beginning $(basename $0) run at $(date)
***

EOF

function statusmsg() {
	echo | tee -a ${logfile}
	echo -e "*** $1" | tee -a ${logfile}
}


###
# Determine which directories to build with luarocks
if [ $# -eq 0 ]; then
	# If no command line args, assume current directory
	statusmsg "No arguments passed, so will run 'luarocks make' in the current directory: ${rockdirs}"
	rockdirs="${rundir}"
else
	rockdirs="$@"
	statusmsg "Will run 'luarocks make' in the given directories: ${rockdirs}"
fi

###
# Choose a downloader
if which wget > /dev/null; then
	WGET="wget -c -t0"
else
	WGET="curl -O --retry 10"
fi

###
# Variables and function for tracking temporary directories/files we must delete.
TEMPS=""
TEMPMSGS="Cleaning up temporary locations:"
function addTempTrap() {
	TEMPS="${TEMPS} ${2}"
	TEMPMSGS="${TEMPMSGS}\n - ${1}: ${2}"
}

###
# Log the selection of TREEDIR
statusmsg "Will install rocks to a tree rooted at ${TREEDIR}"

###
# Use or compute a PREFIX
: ${PREFIX:="${TREEDIR}/luarocks-${luarocks_ver}"}
mkdir -p "${PREFIX}"
statusmsg "Will install LuaRocks itself to the prefix ${PREFIX}"

luarocks_stamp="${PREFIX}/tumblerdone"

###
# Use or make a temporary WORKDIR
if [ -z "${WORKDIR}" ]; then
	WORKDIR=$(mktemp -d)
	temps="${temps} ${WORKDIR}"
	statusmsg "Using a temporary directory as the working directory for download, extraction, and build: ${WORKDIR}"
	addTempTrap "working directory" "${WORKDIR}"
else
	statusmsg "Using specified directory as the working directory for download, extraction, and build: ${WORKDIR}"
fi
mkdir -p "${WORKDIR}"

###
# Be sure to delete temporary directories.
if [ ! -z "${TEMPS}" ]; then
	trap "statusmsg '${TEMPMSGS}'; rm -rf ${TEMPS}" EXIT
fi

if [ ! -f "${luarocks_stamp}" ]; then
	(
		# Grab latest luarocks and install
		cd "${WORKDIR}"
		if [ ! -f luarocks-${luarocks_ver}.tar.gz ]; then
			statusmsg "Downloading and unzipping ${luarocks_url}"
			$WGET $luarocks_url >> ${logfile}
			tar xvzf luarocks-${luarocks_ver}.tar.gz >> ${logfile}
		fi
		cd luarocks-$luarocks_ver

		statusmsg "Configuring LuaRocks ${luarocks_ver}" && \
		./configure --prefix=${PREFIX} --sysconfdir=${TREEDIR} --rocks-tree=${TREEDIR} --force-config >> ${logfile} && \
		statusmsg "Installing LuaRocks ${luarocks_ver}" && \
		make install >> ${logfile} && touch "${luarocks_stamp}"
	)
fi

for rockdir in ${rockdirs}; do
(
	cd ${rundir}
	cd ${rockdir}
	statusmsg "Running luarocks make in $(pwd)"
	${PREFIX}/bin/luarocks make >> ${logfile} && statusmsg "luarocks make in ${rockdir} complete!"
)
done

statusmsg "luarocks-tumbler complete - full output was logged to ${logfile}"
